// Generated by CoffeeScript 1.4.0

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    return define(['jquery'], function(jQuery) {
      return factory(jQuery);
    });
  } else {
    return root.inputio = factory(root.jQuery);
  }
})(this, function(jQuery) {
  var coerceValue, dateJSInstalled, getInputValue, setInputValue, validateValue;
  dateJSInstalled = Boolean(Date.CultureInfo);
  getInputValue = function(selector) {
    var $el, e, multi, value;
    multi = false;
    $el = $(selector).not(':disabled');
    if ($el.is('input[type=checkbox]') && $el.length > 1) {
      multi = true;
    }
    if ($el.is('input[type=radio],input[type=checkbox]')) {
      $el = $el.filter(':checked');
    }
    if ($el.is('select[multiple]')) {
      multi = true;
      value = $el.val();
    } else if (multi || $el.length > 1) {
      multi = true;
      value = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = $el.length; _i < _len; _i++) {
          e = $el[_i];
          _results.push($(e).val());
        }
        return _results;
      })();
    } else {
      value = $el.val();
    }
    if (!(value != null) || value === '') {
      value = multi ? [] : null;
    }
    return value;
  };
  setInputValue = function(selector, value) {
    var $el, i, multi, x, _i, _len;
    multi = false;
    $el = $(selector);
    if ($el.is('select[multiple],input[type=radio],input[type=checkbox]')) {
      multi = true;
    }
    if (!multi && $el.length > 1) {
      if (!$.isArray(value)) {
        value = [value];
      }
      for (i = _i = 0, _len = value.length; _i < _len; i = ++_i) {
        x = value[i];
        $($el[i]).val(x);
      }
      return;
    }
    if (multi && !$.isArray(value)) {
      value = [value];
    } else if (!multi && $.isArray(value)) {
      value = value[0];
    }
    $el.val(value);
  };
  coerceValue = function(value, type) {
    var cleaned, x, _i, _len;
    if (!(value != null) || value === '') {
      return null;
    }
    if ($.isArray(value)) {
      cleaned = [];
      for (_i = 0, _len = value.length; _i < _len; _i++) {
        x = value[_i];
        if ((x = coerceValue(x, type))) {
          cleaned.push(x);
        }
      }
      if (cleaned.length) {
        return cleaned;
      } else {
        return null;
      }
    } else {
      switch (type) {
        case 'boolean':
          return Boolean(value);
        case 'number':
          return parseFloat(value);
        case 'string':
          return value.toString();
        case 'date':
        case 'datetime':
        case 'time':
          if (!dateJSInstalled) {
            throw new Error('date.js must be installed to properly dates');
          }
          return Date.parse(value);
      }
    }
  };
  validateValue = function(value, type) {
    switch (type) {
      case 'boolean':
      case 'number':
      case 'string':
        return $.type(value) === type;
      case 'date':
      case 'datetime':
      case 'time':
        return $.type(value) === 'date';
      default:
        return false;
    }
  };
  return {
    getInputValue: getInputValue,
    setInputValue: setInputValue,
    coerceValue: coerceValue,
    validateValue: validateValue
  };
});
